;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-number-history magit-revision-history helm-grep-ag-history helm-file-name-history compile-history helm-build-regexp-history helm-apropos-history helm-M-x-input-history markdown-gfm-language-history org-read-date-history string-rectangle-history query-replace-history search-ring goto-line-history regexp-history command-history read-expression-history empty-history ivy-history file-name-history minibuffer-history extended-command-history buffer-name-history))
(setq helm-file-name-history '("config -b" "config" "config" "Fastfile" "Fastfile" "COMMIT_EDITMSG" "pre-commit" "2022_12_rf_email_context.yaml" "pre-commit-arash" "Fastfile" "fastlane" "Fastfile" "key.properties" "package.json" "package" "COMMIT_EDITMSG" "thrift-definitions" "seo_handler.go" ".zshrc" "index.ts" "README.md" "assets" "functions" "functions" ".zshrc" "2022-09-go-cast.md" ".zlogin" ".zprofile" ".zshenv" ".zshrc" "pre-commit" "test.sh" "git-rebase-todo" "hooks" "experiment-definitions" "2022_12_rf_email_context.yaml" "2022_12_ib_customer_photos.yaml" "202_12_rf_email_context.yaml" "build-scripts.sh" "202_12_rf_email_context.yaml" "Makefile" "config" "saffron.md" "2022-12-16-material3.md" "natural.md" "nootropics.md" "config.yaml" "Makefile" "locations.tf" "airflow_config.yaml" "build.py" "deploy.sh" "config" "config" ".gitmodules" "config" "22-12-05-flutter-future.md" "test.dart" "content" "22-12-05-future.md" "flutter" "wabi-sabi" "versions.tf" "agonas.tf" "agonas.tf" "locations.tf" "my_heml.el" "custom.el" "init.el" "personal" "my_heml.el" "personal" "personal" ".emacs.d" "personal" "emacs-helm.sh" "emacs-helm.sh" "helm.el" "emacs-helm.sh" "emacs-helm.sh" "emacs-helm.sh" "5-digit Commercial-2016.csv" "5-digit Commercial.csv" "aws" "terraform" "geo.thrift" "geo.thrift" "Makefile" "config.toml" "wabi-sabi" ".env" "bigquery_writer.go" "zip_code_storage.go" "2022-11-scrum-concepts.md" "config" "static" "github.svg" "config_thumbtack" "crash.txt" "timeline_presentation.org"))
(setq helm-apropos-history '(#("helm-etags-select" 0 17 (fontified t)) "helm" #("apropos-command" 0 15 (fontified t))))
(setq helm-M-x-input-history '("magit" "ser" "magit" "ser" "magit" "server" "magit" "server" "cider-ja" "magit" "blam" "magit" "start" "php-" "package-li" "package-insta" "dired-crea" #("kafka-topics.sh" 0 15 (fontified t face font-lock-string-face)) "go" "start" "go" "magit" "server" "magit" "start" "magit" "start" "eshe" "start" "sta" "magi" "start" "delete-word" "eshell" "helm-mini " "helm-min" "helm-mini" "i" "helm-bu" "projectile" "kill" "recent-fi" "goto" "goto-line" "reforma" "package-" "package-list" "package-insta" "dired-move" "timeta" "org-time-stam" "org-timesta" "timesta" "ibuff" "insert-date" "package" "helm-ime" "ibuff" "helm-imen" "strict-mode" "eval" "helm-mi" "helm-buffer-m" "ibuffer" #("x" 0 1 (face helm-source-header display-line-numbers-disable t)) #("typical" 0 7 (fontified t)) "buffer-men" "helm-mini" "eval-" "helm-" "ibuf" #("define-key" 0 10 (fontified t)) "helm-dired" "apropos" "occur" "helm-buffer" "eval" "list-buffers" "helm-buff" "eval"))
(setq markdown-gfm-language-history '("java" "dart" "dar" #("shell" 0 5 (ivy-index 0))))
(setq org-read-date-history '("   "))
(setq string-rectangle-history '("       "))
(setq query-replace-history '("
" "," "" "," "\\n" "," "\"\\1\"" "\\(\\<\\w+\\>\\)" "" "," "" ""))
(setq search-ring '(#("drop" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("font" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("organic" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("sem" 0 3 (isearch-regexp-function nil isearch-case-fold-search t)) #("incenti" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("oneoff" 0 6 (isearch-regexp-function nil isearch-case-fold-search t)) #("one" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("optoutmagit" 0 11 (isearch-regexp-function nil isearch-case-fold-search t)) #("User" 0 4 (isearch-regexp-function nil isearch-case-fold-search nil)) #("NegotiationSummary" 0 18 (isearch-regexp-function nil isearch-case-fold-search nil)) #("Seller" 0 6 (isearch-regexp-function nil isearch-case-fold-search nil)) #("Request" 0 7 (isearch-case-fold-search nil isearch-regexp-function nil)) #("AddMessageParam" 0 15 (isearch-case-fold-search nil isearch-regexp-function nil)) #("getnegotiationsummariesforrequestoutput" 0 39 (isearch-regexp-function nil isearch-case-fold-search t)) #("service" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("should" 0 6 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq goto-line-history '("665" "35296" "20000" "1"))
(setq regexp-history '("locations" "java"))
(setq command-history '((server-start nil) (execute-extended-command nil "server-start" #("server-star
server-start" 11 12 (read-only nil) 12 22 (face (ivy-minibuffer-match-face-2 ivy-current-match) mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) read-only nil) 22 24 (mouse-face ivy-minibuffer-match-highlight help-echo (format (if tooltip-mode "mouse-1: %s
mouse-3: %s" "mouse-1: %s   mouse-3: %s") ivy-mouse-1-tooltip ivy-mouse-3-tooltip) face (ivy-current-match) read-only nil))) (magit nil '((59 . 35) (("/Users/abizhanzadeh/Thumbtack/website/" magit-get-push-branch #("master" 0 6 (face magit-branch-local font-lock-face magit-branch-local)) nil)) (("/Users/abizhanzadeh/Thumbtack/website/" magit-get-upstream-branch "remove-landing_page_geo_php")) (("/Users/abizhanzadeh/Thumbtack/website/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote font-lock-face magit-branch-remote))) . "refs/remotes/origin/master") (("/Users/abizhanzadeh/Thumbtack/website/" "rev-parse" "--verify" "HEAD~10") . "0560120ca5e5a0b8e63dbfa8a25762454b1a2fdc") (("/Users/abizhanzadeh/Thumbtack/website/" magit-get-upstream-branch nil)) (("/Users/abizhanzadeh/Thumbtack/website/" "rev-parse" "--verify" "--abbrev-ref" "remove-landing_page_geo_php@{upstream}")) (("/Users/abizhanzadeh/Thumbtack/website/" magit-get-push-branch nil nil)) (("/Users/abizhanzadeh/Thumbtack/website/" "rev-parse" "--short" "HEAD~") . "4241bac541") (("/Users/abizhanzadeh/Thumbtack/website/" "rev-parse" "--short" "HEAD") . "0f0d9d5824") (("/Users/abizhanzadeh/Thumbtack/website/" "rev-parse" "--verify" "refs/stash") . "98aa65cc67fc5beb15c994f799151923846becb9") (("/Users/abizhanzadeh/Thumbtack/website/" "rev-parse" "--is-bare-repository") . "false
") ("/Users/abizhanzadeh/Thumbtack/website/" . "2.39.1") (("/Users/abizhanzadeh/Thumbtack/website/" magit-git-dir "BISECT_LOG") . "/Users/abizhanzadeh/Thumbtack/website/.git/BISECT_LOG") (("/Users/abizhanzadeh/Thumbtack/website/" magit-git-dir "REVERT_HEAD") . "/Users/abizhanzadeh/Thumbtack/website/.git/REVERT_HEAD") (("/Users/abizhanzadeh/Thumbtack/website/" magit-git-dir "sequencer/todo") . "/Users/abizhanzadeh/Thumbtack/website/.git/sequencer/todo") (("/Users/abizhanzadeh/Thumbtack/website/" magit-git-dir "CHERRY_PICK_HEAD") . "/Users/abizhanzadeh/Thumbtack/website/.git/CHERRY_PICK_HEAD") (("/Users/abizhanzadeh/Thumbtack/website/" magit-git-dir "rebase-apply/applying") . "/Users/abizhanzadeh/Thumbtack/website/.git/rebase-apply/applying") (("/Users/abizhanzadeh/Thumbtack/website/" magit-git-dir "rebase-apply/onto") . "/Users/abizhanzadeh/Thumbtack/website/.git/rebase-apply/onto") (("/Users/abizhanzadeh/Thumbtack/website/" magit-git-dir "rebase-merge") . "/Users/abizhanzadeh/Thumbtack/website/.git/rebase-merge") (("/Users/abizhanzadeh/Thumbtack/website/" magit-git-dir "MERGE_HEAD") . "/Users/abizhanzadeh/Thumbtack/website/.git/MERGE_HEAD") (("/Users/abizhanzadeh/Thumbtack/website/" "rev-parse" "--git-dir") . ".git") (("/Users/abizhanzadeh/Thumbtack/website/" "describe" "--contains" "HEAD")) (("/Users/abizhanzadeh/Thumbtack/website/" "describe" "--long" "--tags")) (("/Users/abizhanzadeh/Thumbtack/website/" magit-get-push-branch "remove-landing_page_geo_php" nil)) (("/Users/abizhanzadeh/Thumbtack/website/" "show" "--no-patch" "--format=%h %s" "HEAD^{commit}" "--") . "0f0d9d5824 Add logs to debug cancel instant book credentials") (("/Users/abizhanzadeh/Thumbtack/website/" "symbolic-ref" "--short" "HEAD") . "remove-landing_page_geo_php") (("/Users/abizhanzadeh/Thumbtack/website/" "rev-parse" "--verify" "HEAD") . "0f0d9d582449bf5e13a26860fa4c3c9cbf64bdf7") (("/Users/abizhanzadeh/Thumbtack/website/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com" "abizhanzadeh@thumbtack.com") "user.name" ("Arash" "arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("ssh://gerrit.internal.aws:29418/website") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "remote.gerrit.url" ("ssh://abizhanzadeh@gerrit.internal.aws:29418/website") "remote.gerrit.fetch" ("+refs/heads/*:refs/remotes/gerrit/*") "branch.review/arash_bizhan_zadeh/GR10229.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR10229.merge" ("refs/heads/master") "branch.review/jeremy_mikkola/refactor-error-handler.remote" ("gerrit") "branch.review/jeremy_mikkola/refactor-error-handler.merge" ("refs/heads/master") "branch.review/arash_bizhan_zadeh/GR-10240-redirect-cleanup.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10240-redirect-cleanup.merge" ("refs/heads/master") "branch.review/arash_bizhan_zadeh/GR-10482-be-repurpose-state-expansion-featureflag-to-enable-all-us-states.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10482-be-repurpose-state-expansion-featureflag-to-enable-all-us-states.merge" ("refs/heads/master") "branch.review/arash_bizhan_zadeh/GR-9808-clean-up-search-ad-symmetric-messaging-ff.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-9808-clean-up-search-ad-symmetric-messaging-ff.merge" ("refs/heads/master") "branch.review/arash_bizhan_zadeh/GR-10591-build-a-path-for-refunding-customers.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10591-build-a-path-for-refunding-customers.merge" ("refs/heads/master") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/Thumbtack/website/" . magit-toplevel) . "/Users/abizhanzadeh/Thumbtack/website/") (("/Users/abizhanzadeh/Thumbtack/website/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/Thumbtack/website/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/Thumbtack/website") (("/Users/abizhanzadeh/Thumbtack/website/.git/" . magit-toplevel) . "/Users/abizhanzadeh/Thumbtack/website/") (("/Users/abizhanzadeh/Thumbtack/website/.git/" "rev-parse" "--is-bare-repository") . "false
") (("/Users/abizhanzadeh/Thumbtack/website/.git/" "rev-parse" "--git-dir") . ".") (("/Users/abizhanzadeh/Thumbtack/website/.git/" "rev-parse" "--show-toplevel")))) (kill-buffer "2022-11-21T1413.org") (kill-buffer "request_recovery.thrift") (kill-buffer "*Customize Group: Emacs*") (kill-buffer "*Customize Apropos*") (kill-buffer "*info*") (kill-buffer "COMMIT_EDITMSG") (kill-buffer "COMMIT_EDITMSG") (kill-buffer "COMMIT_EDITMSG") (server-start nil) (kill-buffer "COMMIT_EDITMSG") (kill-buffer "COMMIT_EDITMSG") (kill-buffer "COMMIT_EDITMSG") (server-start nil) (kill-buffer "2023-02-27T1507.org") (server-start nil) (kill-buffer "zshrc.orig") (magit nil '((59 . 31) (("/Users/abizhanzadeh/Thumbtack/scala/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote font-lock-face magit-branch-remote))) . "refs/remotes/origin/master") (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--short" "HEAD~") . "c1c1f29c8") (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--short" "HEAD") . "210407e0b") (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--verify" "HEAD~10") . "c6bafddab0fb406ee6cb15ea5b246616b7064ec6") (("/Users/abizhanzadeh/Thumbtack/scala/" magit-get-upstream-branch nil) . #("origin/master" 0 13 (face magit-branch-remote font-lock-face magit-branch-remote))) (("/Users/abizhanzadeh/Thumbtack/scala/" magit-get-push-branch nil nil)) (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--verify" "refs/stash")) (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--is-bare-repository") . "false
") ("/Users/abizhanzadeh/Thumbtack/scala/" . "2.39.1") (("/Users/abizhanzadeh/Thumbtack/scala/" magit-git-dir "BISECT_LOG") . "/Users/abizhanzadeh/Thumbtack/scala/.git/BISECT_LOG") (("/Users/abizhanzadeh/Thumbtack/scala/" magit-git-dir "REVERT_HEAD") . "/Users/abizhanzadeh/Thumbtack/scala/.git/REVERT_HEAD") (("/Users/abizhanzadeh/Thumbtack/scala/" magit-git-dir "sequencer/todo") . "/Users/abizhanzadeh/Thumbtack/scala/.git/sequencer/todo") (("/Users/abizhanzadeh/Thumbtack/scala/" magit-git-dir "CHERRY_PICK_HEAD") . "/Users/abizhanzadeh/Thumbtack/scala/.git/CHERRY_PICK_HEAD") (("/Users/abizhanzadeh/Thumbtack/scala/" magit-git-dir "rebase-apply/applying") . "/Users/abizhanzadeh/Thumbtack/scala/.git/rebase-apply/applying") (("/Users/abizhanzadeh/Thumbtack/scala/" magit-git-dir "rebase-apply/onto") . "/Users/abizhanzadeh/Thumbtack/scala/.git/rebase-apply/onto") (("/Users/abizhanzadeh/Thumbtack/scala/" magit-git-dir "rebase-merge") . "/Users/abizhanzadeh/Thumbtack/scala/.git/rebase-merge") (("/Users/abizhanzadeh/Thumbtack/scala/" magit-git-dir "MERGE_HEAD") . "/Users/abizhanzadeh/Thumbtack/scala/.git/MERGE_HEAD") (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--git-dir") . ".git") (("/Users/abizhanzadeh/Thumbtack/scala/" "describe" "--contains" "HEAD")) (("/Users/abizhanzadeh/Thumbtack/scala/" "describe" "--long" "--tags") . "shared-913-g210407e0b") (("/Users/abizhanzadeh/Thumbtack/scala/" magit-get-push-branch "master" nil)) (("/Users/abizhanzadeh/Thumbtack/scala/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote)) "--") . "Delete the metrics3-statsd dependency") (("/Users/abizhanzadeh/Thumbtack/scala/" magit-get-upstream-branch "master") . #("origin/master" 0 13 (face magit-branch-remote font-lock-face (magit-branch-upstream magit-branch-remote)))) (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--verify" "--abbrev-ref" "master@{upstream}") . "origin/master") (("/Users/abizhanzadeh/Thumbtack/scala/" "show" "--no-patch" "--format=%h %s" "HEAD^{commit}" "--") . "210407e0b Delete the metrics3-statsd dependency") (("/Users/abizhanzadeh/Thumbtack/scala/" "symbolic-ref" "--short" "HEAD") . "master") (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--verify" "HEAD") . "210407e0b85afab270ca5915668e0cde4805e3af") (("/Users/abizhanzadeh/Thumbtack/scala/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com") "user.name" ("Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("git@github.com-abizhanzadeh:thumbtack/scala.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "remote.arash.url" ("git-arash:arashbi/tt-scala.git") "remote.arash.fetch" ("+refs/heads/*:refs/remotes/arash/*") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/Thumbtack/scala/" . magit-toplevel) . "/Users/abizhanzadeh/Thumbtack/scala/") (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/Thumbtack/scala"))) (magit nil '((7 . 5) (("/Users/abizhanzadeh/Thumbtack/scala/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com") "user.name" ("Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("git@github.com-abizhanzadeh:thumbtack/scala.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "remote.arash.url" ("git-arash:arashbi/tt-scala.git") "remote.arash.fetch" ("+refs/heads/*:refs/remotes/arash/*") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/Thumbtack/scala/" . magit-toplevel) . "/Users/abizhanzadeh/Thumbtack/scala/") (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/Thumbtack/scala"))) (magit nil '((8 . 5) (("/Users/abizhanzadeh/Thumbtack/scala/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com") "user.name" ("Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("git@github.com-abizhanzadeh:thumbtack/scala.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "remote.arash.url" ("git-arash:arashbi/tt-scala.git") "remote.arash.fetch" ("+refs/heads/*:refs/remotes/arash/*") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/Thumbtack/scala/" . magit-toplevel) . "/Users/abizhanzadeh/Thumbtack/scala/") (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/Thumbtack/scala/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/Thumbtack/scala"))) (server-start nil) (kill-buffer "*Async Shell Command*") (magit nil '((75 . 35) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-push-branch #("master" 0 6 (font-lock-face magit-branch-local face magit-branch-local)) nil)) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (font-lock-face magit-branch-remote face magit-branch-remote))) . "refs/remotes/origin/master") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "symbolic-ref" #("refs/remotes/gerrit/HEAD" 13 19 (font-lock-face magit-branch-remote face magit-branch-remote)))) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-upstream-branch nil) . #("gerrit/master" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote))) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-push-branch nil nil)) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--short" "HEAD~") . "2748e356") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--short" "HEAD") . "ebd454ba") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--verify" "refs/stash") . "a3bf196b3c28bd3da0faba32538a6457d5f468f1") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--is-bare-repository") . "false
") ("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" . "2.39.1") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "BISECT_LOG") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/BISECT_LOG") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "REVERT_HEAD") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/REVERT_HEAD") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "sequencer/todo") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/sequencer/todo") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "CHERRY_PICK_HEAD") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/CHERRY_PICK_HEAD") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "rebase-apply/applying") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/rebase-apply/applying") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "rebase-apply/onto") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/rebase-apply/onto") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "rebase-merge") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/rebase-merge") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "MERGE_HEAD") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/MERGE_HEAD") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--git-dir") . ".git") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "describe" "--contains" "HEAD")) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "describe" "--long" "--tags")) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-push-branch "review/arash_bizhan_zadeh/GR-10872-create-experiment-doc-yaml-for-waiting-for-pro-response" nil)) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "show" "--no-patch" "--format=%s" #("gerrit/master^{commit}" 0 13 (face magit-branch-remote font-lock-face magit-branch-remote)) "--") . "Fetch api endpoint each time new service is selected from dropdown") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-upstream-branch "review/arash_bizhan_zadeh/GR-10872-create-experiment-doc-yaml-for-waiting-for-pro-response") . #("gerrit/master" 0 13 (font-lock-face (magit-branch-upstream magit-branch-remote) face magit-branch-remote))) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--verify" "--abbrev-ref" "review/arash_bizhan_zadeh/GR-10872-create-experiment-doc-yaml-for-waiting-for-pro-response@{upstream}") . "gerrit/master") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "show" "--no-patch" "--format=%h %s" "HEAD^{commit}" "--") . "ebd454ba GR-10872 thrift definitiopn for recovery kafka") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "symbolic-ref" "--short" "HEAD") . "review/arash_bizhan_zadeh/GR-10872-create-experiment-doc-yaml-for-waiting-for-pro-response") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--verify" "HEAD") . "ebd454ba501d97dcee0a101162843402956486d5") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com" "abizhanzadeh@thumbtack.com") "user.name" ("Arash" "Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("ssh://abizhanzadeh@gerrit.thumbtack.io:29418/thrift-definitions") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "remote.gerrit.url" ("ssh://abizhanzadeh@gerrit.internal.aws:29418/thrift-definitions") "remote.gerrit.fetch" ("+refs/heads/*:refs/remotes/gerrit/*") "pull.rebase" ("true") "branch.review/arash_bizhan_zadeh/GR-10350-landing-page-table.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10350-landing-page-table.merge" ("refs/heads/master") "branch.review/arash_bizhan_zadeh/GR-10552-various-thrift-issues-in-seo-service.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10552-various-thrift-issues-in-seo-service.merge" ("refs/heads/master") "branch.review/arash_bizhan_zadeh/GR-10591-build-a-path-for-refunding-customers.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10591-build-a-path-for-refunding-customers.merge" ("refs/heads/master") "branch.review/arash_bizhan_zadeh/GR-10872-create-experiment-doc-yaml-for-waiting-for-pro-response.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10872-create-experiment-doc-yaml-for-waiting-for-pro-response.merge" ("refs/heads/master") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" . magit-toplevel) . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/com/thumbtack/recommendation/" . magit-toplevel) . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/com/thumbtack/recommendation/" "rev-parse" "--show-cdup") . "../../../") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/com/thumbtack/recommendation/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions"))) (kill-buffer "magit: thrift-definitions") (kill-buffer "communications") (kill-buffer "COMMIT_EDITMSG") (magit nil '((59 . 36) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-push-branch #("master" 0 6 (font-lock-face magit-branch-local face magit-branch-local)) nil)) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-upstream-branch "GR-10872-create-experiment-doc-yaml-for-waiting-for-pro-response")) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (font-lock-face magit-branch-remote face magit-branch-remote))) . "refs/remotes/origin/master") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--verify" "HEAD~10") . "08dc2a03c9041934dbd5a2fceb6bcf35e25e5a2b") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-upstream-branch nil)) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--verify" "--abbrev-ref" "GR-10872-create-experiment-doc-yaml-for-waiting-for-pro-response@{upstream}")) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-push-branch nil nil)) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--short" "HEAD~") . "3532fa5b") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--short" "HEAD") . "2748e356") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--verify" "refs/stash") . "a3bf196b3c28bd3da0faba32538a6457d5f468f1") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--is-bare-repository") . "false
") ("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" . "2.39.1") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "BISECT_LOG") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/BISECT_LOG") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "REVERT_HEAD") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/REVERT_HEAD") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "sequencer/todo") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/sequencer/todo") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "CHERRY_PICK_HEAD") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/CHERRY_PICK_HEAD") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "rebase-apply/applying") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/rebase-apply/applying") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "rebase-apply/onto") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/rebase-apply/onto") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "rebase-merge") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/rebase-merge") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "MERGE_HEAD") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/MERGE_HEAD") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--git-dir") . ".git") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "describe" "--contains" "HEAD")) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "describe" "--long" "--tags")) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-push-branch "GR-10872-create-experiment-doc-yaml-for-waiting-for-pro-response" nil)) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "show" "--no-patch" "--format=%h %s" "HEAD^{commit}" "--") . "2748e356 Update Todo thrift definitions for Plan Tab") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "symbolic-ref" "--short" "HEAD") . "GR-10872-create-experiment-doc-yaml-for-waiting-for-pro-response") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--verify" "HEAD") . "2748e356b1b39f6a3cafb903865ca11137208873") (("/Users/abizhanzadeh/" "rev-parse" "--show-toplevel")) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com" "abizhanzadeh@thumbtack.com") "user.name" ("Arash" "Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("ssh://abizhanzadeh@gerrit.thumbtack.io:29418/thrift-definitions") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "remote.gerrit.url" ("ssh://abizhanzadeh@gerrit.internal.aws:29418/thrift-definitions") "remote.gerrit.fetch" ("+refs/heads/*:refs/remotes/gerrit/*") "pull.rebase" ("true") "branch.review/arash_bizhan_zadeh/GR-10350-landing-page-table.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10350-landing-page-table.merge" ("refs/heads/master") "branch.review/arash_bizhan_zadeh/GR-10552-various-thrift-issues-in-seo-service.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10552-various-thrift-issues-in-seo-service.merge" ("refs/heads/master") "branch.review/arash_bizhan_zadeh/GR-10591-build-a-path-for-refunding-customers.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10591-build-a-path-for-refunding-customers.merge" ("refs/heads/master") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" . magit-toplevel) . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/" . magit-toplevel) . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/" "rev-parse" "--is-bare-repository") . "false
") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/" "rev-parse" "--git-dir") . ".") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/" "rev-parse" "--show-toplevel")))) (server-start nil) (kill-buffer "COMMIT_EDITMSG") (kill-buffer "COMMIT_EDITMSG") (kill-buffer "COMMIT_EDITMSG") (kill-buffer "COMMIT_EDITMSG") (kill-buffer "COMMIT_EDITMSG") (server-start nil) (kill-buffer "contact.thrift") (projectile-ag "customercontact" nil) (kill-buffer "*cider-error*") (cider-jack-in nil) (describe-function 'map) (magit-blame) (magit-blame) (magit nil '((64 . 35) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote font-lock-face magit-branch-remote))) . "refs/remotes/origin/master") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--verify" "HEAD~10") . "5dc704d5e34da2290b40b9b9d8d8222eadc0bc86") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-upstream-branch nil) . #("origin/master" 0 13 (face magit-branch-remote font-lock-face magit-branch-remote))) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-push-branch nil nil)) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--short" "HEAD~") . "85b3fbd8") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--short" "HEAD") . "e029f785") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--verify" "refs/stash") . "a3bf196b3c28bd3da0faba32538a6457d5f468f1") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--is-bare-repository") . "false
") ("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" . "2.39.1") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "BISECT_LOG") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/BISECT_LOG") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "REVERT_HEAD") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/REVERT_HEAD") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "sequencer/todo") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/sequencer/todo") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "CHERRY_PICK_HEAD") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/CHERRY_PICK_HEAD") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "rebase-apply/applying") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/rebase-apply/applying") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "rebase-apply/onto") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/rebase-apply/onto") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "rebase-merge") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/rebase-merge") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-git-dir "MERGE_HEAD") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/MERGE_HEAD") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--git-dir") . ".git") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "describe" "--contains" "HEAD")) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "describe" "--long" "--tags")) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-push-branch "master" nil)) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote)) "--") . "HG-1600 add HOME_CARE_GUIDE_BROWSE_SECTION thrift definition") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" magit-get-upstream-branch "master") . #("origin/master" 0 13 (face magit-branch-remote font-lock-face (magit-branch-upstream magit-branch-remote)))) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--verify" "--abbrev-ref" "master@{upstream}") . "origin/master") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "show" "--no-patch" "--format=%h %s" "HEAD^{commit}" "--") . "e029f785 HG-1600 add HOME_CARE_GUIDE_BROWSE_SECTION thrift definition") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "symbolic-ref" "--short" "HEAD") . "master") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--verify" "HEAD") . "e029f7850e5ca27b4b2f3076c84591a56ea2bcc9") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/com/thumbtack/negotiation/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com" "abizhanzadeh@thumbtack.com") "user.name" ("Arash" "Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("ssh://abizhanzadeh@gerrit.thumbtack.io:29418/thrift-definitions") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "remote.gerrit.url" ("ssh://abizhanzadeh@gerrit.internal.aws:29418/thrift-definitions") "remote.gerrit.fetch" ("+refs/heads/*:refs/remotes/gerrit/*") "pull.rebase" ("true") "branch.review/arash_bizhan_zadeh/GR-10350-landing-page-table.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10350-landing-page-table.merge" ("refs/heads/master") "branch.review/arash_bizhan_zadeh/GR-10552-various-thrift-issues-in-seo-service.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10552-various-thrift-issues-in-seo-service.merge" ("refs/heads/master") "branch.review/arash_bizhan_zadeh/GR-10591-build-a-path-for-refunding-customers.remote" ("gerrit") "branch.review/arash_bizhan_zadeh/GR-10591-build-a-path-for-refunding-customers.merge" ("refs/heads/master") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" . magit-toplevel) . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/com/thumbtack/messaging/" . magit-toplevel) . "/Users/abizhanzadeh/Thumbtack/thrift-definitions/") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/com/thumbtack/messaging/" "rev-parse" "--show-cdup") . "../../../") (("/Users/abizhanzadeh/Thumbtack/thrift-definitions/com/thumbtack/messaging/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/Thumbtack/thrift-definitions"))) (kill-buffer "COMMIT_EDITMSG") (server-start nil) (php-mode) (kill-buffer "*Packages*") (kill-buffer "*Help*") (package-list-packages nil) (package-install 'phpt-mode nil) (kill-buffer "COMMIT_EDITMSG") (describe-function 'map) (kill-buffer "*Deft*") (kill-buffer "instant_book_notification.thrift") (dired-create-empty-file "/Users/abizhanzadeh/Thumbtack/thrift-definitions/com/thumbtack/kafka/tasks/communications/requiest_recovery.thrift") (kill-buffer "*helm-mode-kill-buffer*") (kill-buffer "*Deft*") (projectile-ag "customer_pk" nil) (projectile-ag "AddRequestToProject" nil) (eshell nil) (goto-line 665 nil) (server-start nil) (goto-line 35296 nil) (magit nil '((59 . 32) (("/Users/abizhanzadeh/Org/deft/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote font-lock-face magit-branch-remote)))) (("/Users/abizhanzadeh/Org/deft/" "rev-parse" "--short" "HEAD~") . "f892cf0") (("/Users/abizhanzadeh/Org/deft/" "rev-parse" "--short" "HEAD") . "f28f027") (("/Users/abizhanzadeh/Org/deft/" "rev-parse" "--verify" "HEAD~10")) (("/Users/abizhanzadeh/Org/deft/" magit-get-upstream-branch nil) . #("origin/main" 0 11 (face magit-branch-remote font-lock-face magit-branch-remote))) (("/Users/abizhanzadeh/Org/deft/" magit-get-push-branch nil nil)) (("/Users/abizhanzadeh/Org/deft/" "rev-parse" "--verify" "refs/stash")) (("/Users/abizhanzadeh/Org/deft/" "rev-parse" "--is-bare-repository") . "false
") ("/Users/abizhanzadeh/Org/deft/" . "2.39.0") (("/Users/abizhanzadeh/Org/deft/" magit-git-dir "BISECT_LOG") . "/Users/abizhanzadeh/Org/deft/.git/BISECT_LOG") (("/Users/abizhanzadeh/Org/deft/" magit-git-dir "REVERT_HEAD") . "/Users/abizhanzadeh/Org/deft/.git/REVERT_HEAD") (("/Users/abizhanzadeh/Org/deft/" magit-git-dir "sequencer/todo") . "/Users/abizhanzadeh/Org/deft/.git/sequencer/todo") (("/Users/abizhanzadeh/Org/deft/" magit-git-dir "CHERRY_PICK_HEAD") . "/Users/abizhanzadeh/Org/deft/.git/CHERRY_PICK_HEAD") (("/Users/abizhanzadeh/Org/deft/" magit-git-dir "rebase-apply/applying") . "/Users/abizhanzadeh/Org/deft/.git/rebase-apply/applying") (("/Users/abizhanzadeh/Org/deft/" magit-git-dir "rebase-apply/onto") . "/Users/abizhanzadeh/Org/deft/.git/rebase-apply/onto") (("/Users/abizhanzadeh/Org/deft/" magit-git-dir "rebase-merge") . "/Users/abizhanzadeh/Org/deft/.git/rebase-merge") (("/Users/abizhanzadeh/Org/deft/" magit-git-dir "MERGE_HEAD") . "/Users/abizhanzadeh/Org/deft/.git/MERGE_HEAD") (("/Users/abizhanzadeh/Org/deft/" "rev-parse" "--git-dir") . ".git") (("/Users/abizhanzadeh/Org/deft/" "describe" "--contains" "HEAD")) (("/Users/abizhanzadeh/Org/deft/" "describe" "--long" "--tags")) (("/Users/abizhanzadeh/Org/deft/" magit-get-push-branch "main" nil)) (("/Users/abizhanzadeh/Org/deft/" "show" "--no-patch" "--format=%s" #("origin/main^{commit}" 0 11 (font-lock-face magit-branch-remote face magit-branch-remote)) "--") . "auto commit") (("/Users/abizhanzadeh/Org/deft/" magit-get-upstream-branch "main") . #("origin/main" 0 11 (face magit-branch-remote font-lock-face (magit-branch-upstream magit-branch-remote)))) (("/Users/abizhanzadeh/Org/deft/" "rev-parse" "--verify" "--abbrev-ref" "main@{upstream}") . "origin/main") (("/Users/abizhanzadeh/Org/deft/" "show" "--no-patch" "--format=%h %s" "HEAD^{commit}" "--") . "f28f027 auto commit") (("/Users/abizhanzadeh/Org/deft/" "symbolic-ref" "--short" "HEAD") . "main") (("/Users/abizhanzadeh/Org/deft/" "rev-parse" "--verify" "HEAD") . "f28f027e9929b1b45eed24ca79f161154cc47d2a") (("/Users/abizhanzadeh/.ssh/" "rev-parse" "--show-toplevel")) (("/Users/abizhanzadeh/Org/deft/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com") "user.name" ("Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("git-arash:arashbi/notes.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.main.remote" ("origin") "branch.main.merge" ("refs/heads/main") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/Org/deft/" . magit-toplevel) . "/Users/abizhanzadeh/Org/deft/") (("/Users/abizhanzadeh/Org/deft/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/Org/deft/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/org/deft"))) (kill-buffer "COMMIT_EDITMSG") (kill-buffer "COMMIT_EDITMSG") (kill-buffer "2022-11-28T1248.org") (server-start nil) (kill-buffer "top_widgets.dart") (magit nil '((73 . 38) (("/Users/abizhanzadeh/sources/timeline/" magit-get-push-branch #("feed_item_detail" 0 16 (font-lock-face magit-branch-local face magit-branch-local)) nil)) (("/Users/abizhanzadeh/sources/timeline/" magit-get-push-branch #("cache-feeditemsdetails" 0 22 (font-lock-face magit-branch-local face magit-branch-local)) nil)) (("/Users/abizhanzadeh/sources/timeline/" magit-get-push-branch #("white-view-feed" 0 15 (font-lock-face magit-branch-local face magit-branch-local)) nil)) (("/Users/abizhanzadeh/sources/timeline/" magit-get-push-branch #("master" 0 6 (font-lock-face magit-branch-local face magit-branch-local)) nil) . #("origin/master" 0 6 (font-lock-face magit-branch-remote face magit-branch-remote) 6 7 (font-lock-face magit-branch-remote face magit-branch-remote) 7 13 (font-lock-face magit-branch-remote face magit-branch-remote))) (("/Users/abizhanzadeh/sources/timeline/" magit-get-upstream-branch "shimmer")) (("/Users/abizhanzadeh/sources/timeline/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (font-lock-face magit-branch-remote face magit-branch-remote))) . "refs/remotes/origin/master") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--verify" "HEAD~10") . "8d763b0a024f4f920ce12c0899838e7294434c51") (("/Users/abizhanzadeh/sources/timeline/" magit-get-upstream-branch nil)) (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--verify" "--abbrev-ref" "shimmer@{upstream}")) (("/Users/abizhanzadeh/sources/timeline/" magit-get-push-branch nil nil)) (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--short" "HEAD~") . "1c75e26") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--short" "HEAD") . "655bb3e") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--verify" "refs/stash") . "3f7c9da37a027dc61fe0d395fa2e9817effaa60a") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--is-bare-repository") . "false
") ("/Users/abizhanzadeh/sources/timeline/" . "2.39.0") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "BISECT_LOG") . "/Users/abizhanzadeh/sources/timeline/.git/BISECT_LOG") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "REVERT_HEAD") . "/Users/abizhanzadeh/sources/timeline/.git/REVERT_HEAD") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "sequencer/todo") . "/Users/abizhanzadeh/sources/timeline/.git/sequencer/todo") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "CHERRY_PICK_HEAD") . "/Users/abizhanzadeh/sources/timeline/.git/CHERRY_PICK_HEAD") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "rebase-apply/applying") . "/Users/abizhanzadeh/sources/timeline/.git/rebase-apply/applying") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "rebase-apply/onto") . "/Users/abizhanzadeh/sources/timeline/.git/rebase-apply/onto") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "rebase-merge") . "/Users/abizhanzadeh/sources/timeline/.git/rebase-merge") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "MERGE_HEAD") . "/Users/abizhanzadeh/sources/timeline/.git/MERGE_HEAD") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--git-dir") . ".git") (("/Users/abizhanzadeh/sources/timeline/" "describe" "--contains" "HEAD")) (("/Users/abizhanzadeh/sources/timeline/" "describe" "--long" "--tags") . "before-upgrade-tag-109-g655bb3e") (("/Users/abizhanzadeh/sources/timeline/" magit-get-push-branch "shimmer" nil)) (("/Users/abizhanzadeh/sources/timeline/" "show" "--no-patch" "--format=%h %s" "HEAD^{commit}" "--") . "655bb3e white image screen, preload images") (("/Users/abizhanzadeh/sources/timeline/" "symbolic-ref" "--short" "HEAD") . "shimmer") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--verify" "HEAD") . "655bb3eac7961d336f78ff5a6f22e725af76790e") (("/Users/abizhanzadeh/sources/timeline/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com" "arashbi@gmail.com") "user.name" ("Arash" "Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("git-arash:redinterface/timeline.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "branch.master.pushremote" ("origin") "user.signingkey" ("") "branch.deeplink.remote" ("origin") "branch.deeplink.merge" ("refs/heads/deeplink") "branch.feed-gallery.remote" ("origin") "branch.feed-gallery.merge" ("refs/heads/feed-gallery") "branch.image-download-optimization.remote" ("origin") "branch.image-download-optimization.merge" ("refs/heads/image-download-optimization") "branch.animations.remote" ("origin") "branch.animations.merge" ("refs/heads/animations") "branch.add-emoji-comment.remote" ("origin") "branch.add-emoji-comment.merge" ("refs/heads/add-emoji-comment") "branch.dio.remote" ("origin") "branch.dio.merge" ("refs/heads/dio") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/sources/timeline/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/sources/timeline") (("/Users/abizhanzadeh/sources/timeline/.git/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/.git/" "rev-parse" "--is-bare-repository") . "false
") (("/Users/abizhanzadeh/sources/timeline/.git/" "rev-parse" "--git-dir") . ".") (("/Users/abizhanzadeh/sources/timeline/.git/" "rev-parse" "--show-toplevel")))) (kill-buffer "COMMIT_EDITMSG") (server-start nil) (kill-buffer "package.json") (kill-buffer "FileEndpoint.java") (magit nil '((71 . 33) (("/Users/abizhanzadeh/sources/timeline/" magit-get-push-branch #("feed_item_detail" 0 16 (font-lock-face magit-branch-local face magit-branch-local)) nil)) (("/Users/abizhanzadeh/sources/timeline/" magit-get-upstream-branch nil) . #("origin/master" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote))) (("/Users/abizhanzadeh/sources/timeline/" magit-get-push-branch nil nil)) (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--short" "HEAD~") . "03c3618") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--short" "HEAD") . "e6ce983") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--verify" "refs/stash") . "3f7c9da37a027dc61fe0d395fa2e9817effaa60a") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--is-bare-repository") . "false
") ("/Users/abizhanzadeh/sources/timeline/" . "2.39.0") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "BISECT_LOG") . "/Users/abizhanzadeh/sources/timeline/.git/BISECT_LOG") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "REVERT_HEAD") . "/Users/abizhanzadeh/sources/timeline/.git/REVERT_HEAD") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "sequencer/todo") . "/Users/abizhanzadeh/sources/timeline/.git/sequencer/todo") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "CHERRY_PICK_HEAD") . "/Users/abizhanzadeh/sources/timeline/.git/CHERRY_PICK_HEAD") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "rebase-apply/applying") . "/Users/abizhanzadeh/sources/timeline/.git/rebase-apply/applying") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "rebase-apply/onto") . "/Users/abizhanzadeh/sources/timeline/.git/rebase-apply/onto") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "rebase-merge") . "/Users/abizhanzadeh/sources/timeline/.git/rebase-merge") (("/Users/abizhanzadeh/sources/timeline/" magit-git-dir "MERGE_HEAD") . "/Users/abizhanzadeh/sources/timeline/.git/MERGE_HEAD") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--git-dir") . ".git") (("/Users/abizhanzadeh/sources/timeline/" "describe" "--contains" "HEAD")) (("/Users/abizhanzadeh/sources/timeline/" "describe" "--long" "--tags") . "before-upgrade-tag-102-ge6ce983") (("/Users/abizhanzadeh/sources/timeline/" magit-get-push-branch "master" nil)) (("/Users/abizhanzadeh/sources/timeline/" "show" "--no-patch" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote font-lock-face magit-branch-remote)) "--") . "post widget update") (("/Users/abizhanzadeh/sources/timeline/" magit-get-upstream-branch "master") . #("origin/master" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote))) (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--verify" "--abbrev-ref" "master@{upstream}") . "origin/master") (("/Users/abizhanzadeh/sources/timeline/" "show" "--no-patch" "--format=%h %s" "HEAD^{commit}" "--") . "e6ce983 Delete fixed.") (("/Users/abizhanzadeh/sources/timeline/" "symbolic-ref" "--short" "HEAD") . "master") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--verify" "HEAD") . "e6ce98390a6665019f49c5012b6c130a9389f6e3") (("/Users/abizhanzadeh/sources/timeline/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com" "arashbi@gmail.com") "user.name" ("Arash" "Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("git-arash:redinterface/timeline.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "user.signingkey" ("") "branch.deeplink.remote" ("origin") "branch.deeplink.merge" ("refs/heads/deeplink") "branch.feed-gallery.remote" ("origin") "branch.feed-gallery.merge" ("refs/heads/feed-gallery") "branch.image-download-optimization.remote" ("origin") "branch.image-download-optimization.merge" ("refs/heads/image-download-optimization") "branch.animations.remote" ("origin") "branch.animations.merge" ("refs/heads/animations") "branch.add-emoji-comment.remote" ("origin") "branch.add-emoji-comment.merge" ("refs/heads/add-emoji-comment") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/sources/timeline/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/firebase/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/sources/timeline") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/sources/timeline/firebase/" "rev-parse" "--show-cdup") . "../") (("/Users/abizhanzadeh/sources/timeline/firebase/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/sources/timeline"))) (magit nil '((9 . 8) (("/Users/abizhanzadeh/sources/timeline/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com" "arashbi@gmail.com") "user.name" ("Arash" "Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("git-arash:redinterface/timeline.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "user.signingkey" ("") "branch.deeplink.remote" ("origin") "branch.deeplink.merge" ("refs/heads/deeplink") "branch.feed-gallery.remote" ("origin") "branch.feed-gallery.merge" ("refs/heads/feed-gallery") "branch.image-download-optimization.remote" ("origin") "branch.image-download-optimization.merge" ("refs/heads/image-download-optimization") "branch.animations.remote" ("origin") "branch.animations.merge" ("refs/heads/animations") "branch.add-emoji-comment.remote" ("origin") "branch.add-emoji-comment.merge" ("refs/heads/add-emoji-comment") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/sources/timeline/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/firebase/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/sources/timeline") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/sources/timeline/firebase/" "rev-parse" "--show-cdup") . "../") (("/Users/abizhanzadeh/sources/timeline/firebase/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/sources/timeline"))) (kill-buffer ".eslintrc.js") (kill-buffer ".eslintignore") (kill-buffer "magit: timeline") (magit nil '((11 . 6) (("/Users/abizhanzadeh/sources/timeline/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com" "arashbi@gmail.com") "user.name" ("Arash" "Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("git-arash:redinterface/timeline.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "user.signingkey" ("") "branch.deeplink.remote" ("origin") "branch.deeplink.merge" ("refs/heads/deeplink") "branch.feed-gallery.remote" ("origin") "branch.feed-gallery.merge" ("refs/heads/feed-gallery") "branch.image-download-optimization.remote" ("origin") "branch.image-download-optimization.merge" ("refs/heads/image-download-optimization") "branch.animations.remote" ("origin") "branch.animations.merge" ("refs/heads/animations") "branch.add-emoji-comment.remote" ("origin") "branch.add-emoji-comment.merge" ("refs/heads/add-emoji-comment") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/sources/timeline/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("~/sources/timeline/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/sources/timeline"))) (kill-buffer "magit: timeline") (magit nil '((10 . 6) (("/Users/abizhanzadeh/sources/timeline/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com" "arashbi@gmail.com") "user.name" ("Arash" "Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("git-arash:redinterface/timeline.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "user.signingkey" ("") "branch.deeplink.remote" ("origin") "branch.deeplink.merge" ("refs/heads/deeplink") "branch.feed-gallery.remote" ("origin") "branch.feed-gallery.merge" ("refs/heads/feed-gallery") "branch.image-download-optimization.remote" ("origin") "branch.image-download-optimization.merge" ("refs/heads/image-download-optimization") "branch.animations.remote" ("origin") "branch.animations.merge" ("refs/heads/animations") "branch.add-emoji-comment.remote" ("origin") "branch.add-emoji-comment.merge" ("refs/heads/add-emoji-comment") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/sources/timeline/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("~/sources/timeline/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/sources/timeline"))) (magit nil '((8 . 8) (("/Users/abizhanzadeh/sources/timeline/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com" "arashbi@gmail.com") "user.name" ("Arash" "Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("git-arash:redinterface/timeline.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "user.signingkey" ("") "branch.deeplink.remote" ("origin") "branch.deeplink.merge" ("refs/heads/deeplink") "branch.feed-gallery.remote" ("origin") "branch.feed-gallery.merge" ("refs/heads/feed-gallery") "branch.image-download-optimization.remote" ("origin") "branch.image-download-optimization.merge" ("refs/heads/image-download-optimization") "branch.animations.remote" ("origin") "branch.animations.merge" ("refs/heads/animations") "branch.add-emoji-comment.remote" ("origin") "branch.add-emoji-comment.merge" ("refs/heads/add-emoji-comment") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/sources/timeline/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/firebase/functions/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/sources/timeline") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/sources/timeline/firebase/functions/" "rev-parse" "--show-cdup") . "../../") (("/Users/abizhanzadeh/sources/timeline/firebase/functions/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/sources/timeline"))) (magit nil '((9 . 8) (("/Users/abizhanzadeh/sources/timeline/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.helper" ("osxkeychain") "user.email" ("abizhanzadeh@thumbtack.com" "arashbi@gmail.com") "user.name" ("Arash" "Arash") "core.editor" ("emacsclient") "core.autocrlf" ("input") "alias.b" ("branch") "alias.ci" ("commit") "alias.co" ("checkout") "alias.s" ("status") "alias.update" ("!if [[ `git status --porcelain` ]]; then git stash && git pull --rebase origin master && git stash pop; else git pull --rebase origin master; fi") "alias.cb" ("!git branch | egrep ^\\\\* | sed -e \"s/^\\* //\"") "alias.lol" ("log --pretty=oneline") "alias.lm" ("log --pretty=oneline master..HEAD") "alias.lu" ("!git log --pretty=oneline origin/$(git cb)..HEAD") "alias.myweek" ("\\!git log --after=\"`date -j -v-1w '+%b %d %Y'`\" --oneline --author=\"`git config user.name`\"") "alias.lastweek" ("\\!git shortlog --after=\"`date -j -v-1w '+%b %d %Y'`\"") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.precomposeunicode" ("true") "remote.origin.url" ("git-arash:redinterface/timeline.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "user.signingkey" ("") "branch.deeplink.remote" ("origin") "branch.deeplink.merge" ("refs/heads/deeplink") "branch.feed-gallery.remote" ("origin") "branch.feed-gallery.merge" ("refs/heads/feed-gallery") "branch.image-download-optimization.remote" ("origin") "branch.image-download-optimization.merge" ("refs/heads/image-download-optimization") "branch.animations.remote" ("origin") "branch.animations.merge" ("refs/heads/animations") "branch.add-emoji-comment.remote" ("origin") "branch.add-emoji-comment.merge" ("refs/heads/add-emoji-comment") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/Users/abizhanzadeh/sources/timeline/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/firebase/functions/" . magit-toplevel) . "/Users/abizhanzadeh/sources/timeline/") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/sources/timeline") (("/Users/abizhanzadeh/sources/timeline/" "rev-parse" "--show-cdup") . "") (("/Users/abizhanzadeh/sources/timeline/firebase/functions/" "rev-parse" "--show-cdup") . "../../") (("/Users/abizhanzadeh/sources/timeline/firebase/functions/" "rev-parse" "--show-toplevel") . "/Users/abizhanzadeh/sources/timeline"))) (kill-buffer "*ag search text:node-fetch dir:/Users/abizhanzadeh/sources/timeline/*") (projectile-ag "node-fetch" nil) (kill-buffer ".gitignore") (kill-buffer ".eslintignore") (kill-buffer ".eslintrc.js") (kill-buffer "*Proced*") (server-start nil) (kill-buffer "google-play.purchase-handler.js") (kill-buffer "*Help*") (kill-buffer "*less*") (kill-buffer "*less*") (eshell nil) (dired-create-directory "/Users/abizhanzadeh/sources/timeline/firebase/functions/assets") (kill-buffer "triggers.js.map") (server-start nil)))
(setq read-expression-history '("(print 'hi)" "wq"))
(setq ivy-history '(#("user.th" 0 7 (ivy-index 3)) "com/thumbtack/user/user.thrift" #("user.thri" 0 9 (ivy-index 0)) "com/thumbtack/fides/endpoint/submit_user.thrift" #("com/thumbtack/kafka/tasks/communications/request_recovery.thrift" 0 64 (ivy-index 0)) #("thrif" 0 5 (ivy-index 0)) "~/Thumbtack/thrift-definitions/" #("recommendation" 0 14 (ivy-index 6)) "com/thumbtack/recommendation/recommendation.thrift" #("recommenda" 0 10 (ivy-index 5)) "com/thumbtack/recommendation/data.thrift" #("thri" 0 4 (ivy-index 0)) "~/Thumbtack/thrift-definitions/" #("README.md" 0 9 (ivy-index 6)) #("sca" 0 3 (ivy-index 0)) "~/Thumbtack/scala/" #("git-rebase-todo" 0 15 (ivy-index 3)) #("~/Thumbtack/sca" 0 15 (ivy-index 0)) "~/Thumbtack/scala/" #("get_budgets" 0 11 (ivy-index 0)) "com/thumbtack/budget/endpoint/get_budgets.thrift" #("budget.th" 0 9 (ivy-index 0)) "com/thumbtack/budget/budget.thrift" #("prediction.thrift" 0 17 (ivy-index 1)) #("recommendation.thrift" 0 21 (ivy-index 1)) #("website" 0 7 (ivy-index 0)) "~/Thumbtack/website/" #("predi" 0 5 (ivy-index 1)) "com/thumbtack/prediction/prediction.thrift" #("recommen" 0 8 (ivy-index 8)) "com/thumbtack/recommendation/recommendation.thrift" #("~/Thumbtack/thrift-definitions/" 0 31 (ivy-index 0)) #("com/thumbtack/reco" 0 18 (ivy-index 1)) "com/thumbtack/recommendation/recommendation.thrift" "com/thumbtack/recommendation/recommendation.thrift" #("magit: thrift-definitions" 0 25 (ivy-index 1)) #("user.thr" 0 8 (ivy-index 3)) "com/thumbtack/user/user.thrift" #("com/thumbtack/kafka/tasks/communications/" 0 41 (ivy-index 0)) #("com/thumbtack/" 0 14 (ivy-index 89)) "com/thumbtack/common/request_categories.thrift" "com/thumbtack/user/user.thrift" #("negotiation" 0 11 (ivy-index 1)) "com/thumbtack/negotiation/negotiation.thrift" #("monetization/con" 0 16 (ivy-index 1)) "com/thumbtack/monetization/contact.thrift" #("monetization/contac" 0 19 (ivy-index 0)) "com/thumbtack/kafka/events/monetization/contact.thrift" #("mon" 0 3 (ivy-index 0)) "com/thumbtack/agonas/common.thrift" #("thrift" 0 6 (ivy-index 0)) #("message.thrift" 0 14 (ivy-index 1)) #("message" 0 7 (ivy-index 0)) "com/thumbtack/messaging/message.thrift" #("negoti" 0 6 (ivy-index 1)) "com/thumbtack/negotiation/negotiation.thrift" #("Recovery" 0 8 (ivy-index 1)) "includes/email/RecoveryEmail.php" #("2023-01-25T1328.org" 0 19 (ivy-index 0)) #("RequestAction" 0 13 (ivy-index 2)) "includes/actions/RequestAction.php" #("~/Thumbtack/website/" 0 20 (ivy-index 0)) "includes/actions/RequestAction.php" #("websi" 0 5 (ivy-index 0)) #("com/thumbtack/kafka" 0 19 (ivy-index 0)) "com/thumbtack/kafka/" #("agonas.thrift" 0 13 (ivy-index 1)) #("com/thumbtack/agonas/agonas.thrift" 0 34 (ivy-index 7)) #("~/Thumbtack/experiment-definitions/" 0 35 (ivy-index 0)) #("yaml" 0 4 (ivy-index 116)) "experiments/active/marketplace/2022_10_new_pro_cold_start.yaml" #("ex" 0 2 (ivy-index 0)) #("Scripte" 0 7 (ivy-index 0)) "includes/actions/ScriptedAction.php" #("bin/cron/send_aggregated_reporting_email.php" 0 44 (ivy-index 47)) #(".editorconfig" 0 13 (ivy-index 2)) #("includes/apis/internal/thrift/incentives/RefundService.php" 0 58 (ivy-index 0)) #("web" 0 3 (ivy-index 0)) #("firebase/.eslintignore" 0 22 (ivy-index 1)) #("~/sources/timeline/" 0 19 (ivy-index 1)) #(".dart_tool/flutter_build/0c3be2cefdbc8b4454c4d853486d7641/_composite.stamp" 0 74 (ivy-index 18)) #("packa" 0 5 (ivy-index 1)) "functions/package.json" #("firebase/package.json" 0 21 (ivy-index 0)) #("firebase/packa" 0 14 (ivy-index 2)) #("functions/package.json" 0 22 (ivy-index 1)) "firebase/functions/package.json" #("app-store" 0 9 (ivy-index 2)) "firebase/functions/src/iap/app-store.purchase-handler.ts" #("iap.ts" 0 6 (ivy-index 3)) #("func" 0 4 (ivy-index 0)) #("iap" 0 3 (ivy-index 0)) #(".eslintrc.js" 0 12 (ivy-index 3)) "firebase/functions/src/iap/iap.ts" #(".eslintignore" 0 13 (ivy-index 1)) #(".gitig" 0 6 (ivy-index 0)) ".gitignore" #("." 0 1 (ivy-index 0)) #(".git" 0 4 (ivy-index 0)) ".gitignore" #("firebase/.eslintrc.js" 0 21 (ivy-index 0))))
(setq file-name-history '("/Users/abizhanzadeh/Thumbtack/experiment-definitions/.git/COMMIT_EDITMSG" "/Users/abizhanzadeh/sources/wordconnect/.git/COMMIT_EDITMSG" "/Users/abizhanzadeh/sources/timeline/baby.json" "/Users/abizhanzadeh/sources/video_trimmer/.git/COMMIT_EDITMSG" "/Users/abizhanzadeh/Thumbtack/website/includes/views/ViewWithUtmParams.php" "~/Thumbtack/alfred/alfred-http/alfred_http/routes.py" "/Users/abizhanzadeh/Thumbtack/alfred/alfred-http/alfred_http/views.py" "/Users/abizhanzadeh/Thumbtack/frontend/react-renderer/pages/homepage-cobalt/homepage-cobalt.jsx" "/Users/abizhanzadeh/Thumbtack/experiment-definitions/experiments/active/customer/2023_02_request_recovery.yaml" "/Users/abizhanzadeh/Thumbtack/website/includes/models/request/RequestServiceServer.php" "/Users/abizhanzadeh/Thumbtack/thrift-definitions/com/thumbtack/clientinfo/clientinfo.thrift" "~/eppr.sql" "~/zshrc.orig" "~/go/src/github.com/thumbtack/go/check.sh" "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/COMMIT_EDITMSG" "/Users/abizhanzadeh/sources/timeline/android/fastlane/Fastfile" "/Users/abizhanzadeh/.zshrc" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/.git/COMMIT_EDITMSG" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/.git/COMMIT_EDITMSG" "~/Thumbtack/thrift-definitions/com/thumbtack/kafka/tasks/communications/requiest_recovery.thrift" "/Users/abizhanzadeh/.zshrc" "/Users/abizhanzadeh/go/pkg/mod/github.com/aws/aws-sdk-go@v1.40.43/service/s3control/endpoint_test.go" "/Users/abizhanzadeh/go/pkg/mod/github.com/aws/aws-sdk-go@v1.40.43/service/s3/api.go" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/Makefile" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/.git/COMMIT_EDITMSG" "/tmp/install.sh" "/Users/abizhanzadeh/.ssh/config" "/tmp/install.sh" "~/.ssh/config" "/tmp/install.sh" "/Users/abizhanzadeh/sources/timeline/android/fastlane/Fastfile" "~/.ssh/config_thumbtack" "/Users/abizhanzadeh/.ssh/config" "/Users/abizhanzadeh/sources/timeline/ios/fastlane/Fastfile" "/Users/abizhanzadeh/sources/timeline/android/fastlane/Fastfile" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/.git/COMMIT_EDITMSG" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/.git/hooks/pre-commit" "/Users/abizhanzadeh/Thumbtack/experiment-definitions/experiments/active/customer/2022_12_rf_email_context.yaml" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/.git/hooks/pre-commit-arash" "/Users/abizhanzadeh/sources/timeline/android/fastlane/Fastfile" "/Users/abizhanzadeh/sources/timeline/android/fastlane" "/Users/abizhanzadeh/sources/timeline/android/fastlane/Fastfile" "/Users/abizhanzadeh/sources/timeline/android/key.properties" "/Users/abizhanzadeh/sources/timeline/firebase/package.json" "/Users/abizhanzadeh/sources/timeline/firebase/package" "/Users/abizhanzadeh/Thumbtack/thrift-definitions/.git/COMMIT_EDITMSG" "/Users/abizhanzadeh/Thumbtack/thrift-definitions" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/seo/handler/seo_handler.go" "/Users/abizhanzadeh/.zshrc" "~/sources/timeline/firebase/functions/src/index.ts" "~/sources/timeline/firebase/README.md" "~/sources/timeline/firebase/functions/assets" "~/sources/timeline/firebase/functions" "/Users/abizhanzadeh/sources/timeline/firebase/functions" "/Users/abizhanzadeh/.zshrc" "/Users/abizhanzadeh/sources/wabi-sabi/content/post/2022-09-go-cast.md" "/Users/abizhanzadeh/.zlogin" "/Users/abizhanzadeh/.zprofile" "/Users/abizhanzadeh/.zshenv" "/Users/abizhanzadeh/.zshrc" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/.git/hooks/pre-commit" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/.git/hooks/test.sh" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/.git/hooks" "/Users/abizhanzadeh/Thumbtack/experiment-definitions" "/Users/abizhanzadeh/Thumbtack/experiment-definitions/experiments/active/customer/2022_12_rf_email_context.yaml" "/Users/abizhanzadeh/Thumbtack/experiment-definitions/experiments/active/customer/2022_12_ib_customer_photos.yaml" "/Users/abizhanzadeh/Thumbtack/experiment-definitions/experiments/active/customer/202_12_rf_email_context.yaml" "/Users/abizhanzadeh/Thumbtack/frontend/lib/packages/cobalt-types/build-scripts.sh" "/Users/abizhanzadeh/Thumbtack/experiment-definitions/experiments/active/customer/202_12_rf_email_context.yaml" "/Users/abizhanzadeh/go/src/github.com/thumbtack/go/Makefile" "/Users/abizhanzadeh/.ssh/config" "~/glowintlifes/saffron.md" "~/sources/wabi-sabi/content/flutter/2022-12-16-material3.md" "~/nootropics/natural.md" "~/nootropics.md" "~/Thumbtack/airavat/.astro/config.yaml" "/Users/abizhanzadeh/Thumbtack/airavat/Makefile" "/Users/abizhanzadeh/Thumbtack/terraform/modules/services/aws/locations/locations.tf" "/Users/abizhanzadeh/Thumbtack/airavat/bin/init_actions/airflow_config.yaml" "/Users/abizhanzadeh/Thumbtack/thrift-definitions/build.py" "/Users/abizhanzadeh/sources/timeline/backend/deploy.sh" "/Users/abizhanzadeh/.ssh/config" "/Users/abizhanzadeh/sources/wabi-sabi/.git/config" "/Users/abizhanzadeh/sources/wabi-sabi/.gitmodules" "/Users/abizhanzadeh/.ssh/config" "~/sources/wabi-sabi/content/post/22-12-05-flutter-future.md" "/Users/abizhanzadeh/test.dart" "/Users/abizhanzadeh/sources/wabi-sabi/content" "~/sources/wabi-sabi/content/flutter/22-12-05-future.md" "~/sources/wabi-sabi/content/flutter" "/Users/abizhanzadeh/sources/wabi-sabi" "~/Thumbtack/terraform/configurations/aws/production_new/services/agonas/versions.tf" "~/Thumbtack/terraform/modules/services/aws/agonas-new/agonas.tf" "~/Thumbtack/terraform/configurations/aws/production_new/services/agonas/agonas.tf" "~/Thumbtack/terraform/modules/services/aws/locations/locations.tf" "~/.emacs.d/personal/my_heml.el" #("/Users/abizhanzadeh/.emacs.d/personal/custom.el" 0 47 (ivy-index 2))))
(setq minibuffer-history '("2022-11-21T1413.org" "request_recovery.thrift" "*Customize Group: Emacs*" "*Customize Apropos*" "*info*" "COMMIT_EDITMSG" "/Users/abizhanzadeh/Thumbtack/alfred/alfred-http/alfred_http/route" "2023-02-27T1507.org" "/Users/abizhanzadeh/eppr.sql" "zshrc.orig" "/Users/abizhanzadeh/" "*Async Shell Command*" "magit: thrift-definitions" "communications" "COMMIT_EDITMSG" "/Users/abizhanzadeh/Thumbtack/thrift-definitions/com/thumbtack/monetization/contact.thrift" "contact.thrift" "customercontact" "*cider-error*" "map" "COMMIT_EDITMSG" "*Packages*" "*Help*" "php" "COMMIT_EDITMSG" "cl-ma " "defun " "cl-ma " "map" "*Deft*" "instant_book_notification.thrift" "/Users/abizhanzadeh/Thumbtack/thrift-definitions/com/thumbtack/kafka/tasks/communications/requiest_recovery.thrift" "*helm-mode-kill-buffer*" "*Deft*" "customer_pk" "AddRequestToProject" "COMMIT_EDITMSG" "2022-11-28T1248.org" "/Users/abizhanzadeh/.ssh/con" "/Users/abizhanzadeh/.ssh/thu" "/Users/abizhanzadeh/.ssh/" "top_widgets.dart" "COMMIT_EDITMSG" "origin" "package.json" "FileEndpoint.java" ".eslintrc.js" ".eslintignore" "magit: timeline" "*ag search text:node-fetch dir:/Users/abizhanzadeh/sources/timeline/*" "node-fetch" ".gitignore" ".eslintignore" ".eslintrc.js" "*Proced*" "/Users/abizhanzadeh/sources/timeline/firebase/functions/src/inde" "/Users/abizhanzadeh/sources/timeline/firebase/REA" "google-play.purchase-handler.js" "*Help*" "*less*" "yar n  " "/Users/abizhanzadeh/sources/timeline/firebase/functions/assets" "triggers.js.map" "post-update.sample" "update.sample" "/Users/abizhanzadeh/glowintlifes/saffron.md" "/Users/abizhanzadeh/sources/wabi-sabi/content/flutter/2022-12-16-material3.md" "22-12-05-future.md" "/Users/abizhanzadeh/nootropics/" "/Users/abizhanzadeh/nootropics/natural.md" "/Users/abizhanzadeh/nootropics.md" "*Ibuffer*" "*info*" #("helm-grep-do-git-grep" 0 21 (fontified t)) "helm-etags-select" "/Users/abizhanzadeh/" "magit: airavat" "*helm-mode-magit-worktree-status*" "config.yaml" "/Users/abizhanzadeh/Thumbtack/airavat/.astro/" "*Ibuffer*" "helm-buffer" "*Help*" "magit: terraform" "Thumbtack" "*info*" "test" "/Users/abizhanzadeh/sources/wabi-sabi/content/post/flu" "*Open Recent*" "*scratch*" "*Packages*" "public" "/Users/abizhanzadeh/sources/wabi-sabi/static/img/" #("img/future" 0 10 (fontified t)) "wabi-sabi" "public" "*Ibuffer*" "*helm browse project*" "img" #("img/future" 0 10 (fontified t))))
(setq extended-command-history '(#("server-start" 0 12 (ivy-index 0)) "magit" "magit" "magit" "cider-jack-in" "magit-blame" "magit" "php-mode" "package-list-packages" "dired-create-empty-file" "eshell" "goto-line" "goto-line" "magit" "magit" "magit" "eshell" "magit" "sp-delete-word" "eshell" "helm-minibuffer-history-mode" "helm-buffers-list" "kill-region" "recentf-open-files" "goto-line" "package-list-packages" "timestamp" "org-time-stamp" "timestamp" "list-buffers" "crux-insert-date" "list-buffers" "helm-imenu" "smartparens-strict-mode" "helm-minibuffer-history-mode" "list-buffers" "buffer-menu" "helm-apropos" "list-buffers" "helm-info-dired-x" "helm-apropos" "occur" "helm-buffers-list" "eval-buffer" "list-buffers" "helm-buffers-list" #("eval-buffer" 0 11 (ivy-index 2)) #("dired" 0 5 (ivy-index 140)) #("csv-align-mode" 0 14 (ivy-index 0)) #("tab-bar-switch-to-prev-tab" 0 26 (ivy-index 1)) #("tab-bar-select-tab" 0 18 (ivy-index 0)) #("tab-bar-new-tab" 0 15 (ivy-index 1)) #("windmove-display-new-tab" 0 24 (ivy-index 0)) #("find-grep-dired" 0 15 (ivy-index 0)) #("helm-show-kill-ring" 0 19 (ivy-index 0)) #("image-dired-refresh-thumb" 0 25 (ivy-index 0)) #("kill-region" 0 11 (ivy-index 1)) #("query-replace" 0 13 (ivy-index 13)) #("tags-query-replace" 0 18 (ivy-index 0)) #("clipboard-kill-region" 0 21 (ivy-index 0)) #("magit" 0 5 (ivy-index 136)) #("ebrowse-tags-find-definition-other-window" 0 41 (ivy-index 0)) #("2C-split" 0 8 (ivy-index 3)) #("awesome-tab-forward-tab" 0 23 (ivy-index 0)) #("awesome-tab-forward" 0 19 (ivy-index 2)) #("awesome-tab-backward" 0 20 (ivy-index 0)) #("facemenu-set-bold" 0 17 (ivy-index 4)) #("enriched-mode" 0 13 (ivy-index 0)) #("org-edit-table.el" 0 17 (ivy-index 1)) #("edit-tab-stops" 0 14 (ivy-index 0)) #("eshell" 0 6 (ivy-index 10)) #("shell-dynamic-complete-command" 0 30 (ivy-index 20)) #("eshell-insert-buffer-name" 0 25 (ivy-index 0)) #("projectile--find-file" 0 21 (ivy-index 4)) #("projectile-find-file-dwim" 0 25 (ivy-index 7)) #("mkdir" 0 5 (ivy-index 0)) #("magit-patch-save" 0 16 (ivy-index 0)) #("project-search" 0 14 (ivy-index 0)) #("query-replace-regexp" 0 20 (ivy-index 3)) #("helm-buffer-run-query-replace-regexp" 0 36 (ivy-index 1)) #("treemacs-increase-width" 0 23 (ivy-index 0)) #("projectile-find-file-other-window" 0 33 (ivy-index 1)) "package-reinstall" #("package-install" 0 15 (ivy-index 0)) #("load-theme" 0 10 (ivy-index 3))))
(setq buffer-name-history '(#("java.el" 0 7 (ivy-index 0)) #("google_compute_engine.pub" 0 25 (ivy-index 0)) #("geoip.tf" 0 8 (ivy-index 0)) #("ichabod.tf" 0 10 (ivy-index 0)) #("*Find*" 0 6 (ivy-index 0)) #("hercule-new" 0 11 (ivy-index 0)) #("hercule.tf" 0 10 (ivy-index 0)) #("seo-new.tf" 0 10 (ivy-index 0)) #("locations" 0 9 (ivy-index 0)) #("locations.tf" 0 12 (ivy-index 0)) #("config.toml" 0 11 (ivy-index 0)) #("2022-11-scrum-concepts.md" 0 25 (ivy-index 0)) #("2022-11-github-multi-account.md" 0 31 (ivy-index 1)) #("config" 0 6 (ivy-index 0)) #("github.svg" 0 10 (ivy-index 0)) #("img" 0 3 (ivy-index 1)) #("static" 0 6 (ivy-index 2)) #("wabi-sabi" 0 9 (ivy-index 3)) #("config_thumbtack" 0 16 (ivy-index 0)) #("zipcodes" 0 8 (ivy-index 0)) #("aug2016_cbsa_csv.zip" 0 20 (ivy-index 0)) #("MSA Codes.txt" 0 13 (ivy-index 0)) #(".#config" 0 8 (ivy-index 0)) #("data" 0 4 (ivy-index 0)) #("models" 0 6 (ivy-index 0)) #("storage" 0 7 (ivy-index 0)) #("zip_code_storage.go" 0 19 (ivy-index 0)) #("zip_code_storage_test.go" 0 24 (ivy-index 0)) #("zip_codes.csv" 0 13 (ivy-index 0)) #("magit-diff: go" 0 14 (ivy-index 0)) #("magit-log: go" 0 13 (ivy-index 0)) #("magit-revision: go" 0 18 (ivy-index 0)) #("RefundService.php" 0 17 (ivy-index 0)) #("20221026_add_refund_table.sql" 0 29 (ivy-index 0)) #("*Man git-log*" 0 13 (ivy-index 0)) #("magit-log: website" 0 18 (ivy-index 0)) #("magit: postgres-schema" 0 22 (ivy-index 0)) #("*Quail Completions*" 0 19 (ivy-index 0)) #(".#20221026_add_refund_table.sql" 0 31 (ivy-index 0)) #("*Deft*" 0 6 (ivy-index 1)) #("deft" 0 4 (ivy-index 0)) #("README.md" 0 9 (ivy-index 0)) #("agent.jinja" 0 11 (ivy-index 0)) #("Screen Shot 2022-08-03 at 20.48.56.png" 0 38 (ivy-index 0)) #("Deployment Manager.postman_collection (1).json" 0 46 (ivy-index 0)) #("2022-10-18T1614.org" 0 19 (ivy-index 0)) #("*Ibuffer*" 0 9 (ivy-index 0)) #("2022-10-16T1915.org" 0 19 (ivy-index 0)) #("content" 0 7 (ivy-index 0)) #("sources" 0 7 (ivy-index 0)) #("abizhanzadeh" 0 12 (ivy-index 0)) #("*Proced*" 0 8 (ivy-index 0)) #("*Tab Stops*" 0 11 (ivy-index 0)) #("*Directory*" 0 11 (ivy-index 0)) #(".env_sample" 0 11 (ivy-index 0)) #("init.zsh" 0 8 (ivy-index 0)) #("magit: experiment-definitions" 0 29 (ivy-index 0)) #("magit-log: experiment-definitions" 0 33 (ivy-index 0)) #("magit-revision: agent-install" 0 29 (ivy-index 0)) #("magit: agent-install" 0 20 (ivy-index 1)) #("magit-log: agent-install" 0 24 (ivy-index 0)) #("index.ts" 0 8 (ivy-index 16)) #("piccogo/go.mod" 0 14 (ivy-index 0)) #(".current-session" 0 16 (ivy-index 0)) #("message-notification.txt" 0 24 (ivy-index 0)) #("message-notification.html" 0 25 (ivy-index 0)) #("new-lead-experience-simplified.json" 0 35 (ivy-index 0)) #("aggregated-report-v3.html" 0 25 (ivy-index 0)) #("inactive" 0 8 (ivy-index 0)) #(".git" 0 4 (ivy-index 6)) #("COMMIT_EDITMSG" 0 14 (ivy-index 0)) #("id_rsa_arash.pub" 0 16 (ivy-index 0)) "export.fish" "fish_variables" "fish_prompt.fish" "config.fish" #("zshrc.orig" 0 10 (ivy-index 0)) #("*Compile-Log*" 0 13 (ivy-index 0)) #("2022-05-08T0030.org" 0 19 (ivy-index 0))))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("/Users/abizhanzadeh/.emacs.d/" (0 0 . [nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]))))
(setq search-ring '(#("drop" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("font" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("organic" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("sem" 0 3 (isearch-regexp-function nil isearch-case-fold-search t)) #("incenti" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("oneoff" 0 6 (isearch-regexp-function nil isearch-case-fold-search t)) #("one" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("optoutmagit" 0 11 (isearch-regexp-function nil isearch-case-fold-search t)) #("User" 0 4 (isearch-regexp-function nil isearch-case-fold-search nil)) #("NegotiationSummary" 0 18 (isearch-regexp-function nil isearch-case-fold-search nil)) #("Seller" 0 6 (isearch-regexp-function nil isearch-case-fold-search nil)) #("Request" 0 7 (isearch-case-fold-search nil isearch-regexp-function nil)) #("AddMessageParam" 0 15 (isearch-case-fold-search nil isearch-regexp-function nil)) #("getnegotiationsummariesforrequestoutput" 0 39 (isearch-regexp-function nil isearch-case-fold-search t)) #("service" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("should" 0 6 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq regexp-search-ring 'nil)
